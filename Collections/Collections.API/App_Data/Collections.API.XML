<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Collections.API</name>
    </assembly>
    <members>
        <member name="T:Collections.API.App_Start.RouteConfig">
            <summary>
            The Route config.
            </summary>
        </member>
        <member name="M:Collections.API.App_Start.RouteConfig.RegisterRoutes(System.Web.Routing.RouteCollection)">
            <summary>
            Registers the routes.
            </summary>
            <param name="routes">The routes.</param>
        </member>
        <member name="T:Collections.API.App_Start.WebApiConfig">
            <summary>
            Web API configuration
            </summary>
        </member>
        <member name="M:Collections.API.App_Start.WebApiConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Registers the specified configuration.
            </summary>
            <param name="config">The configuration.</param>
        </member>
        <member name="T:Collections.API.Controllers.BaseController">
            <summary>
            The Base controller
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="P:Collections.API.Controllers.BaseController.Logger">
            <summary>
            Gets or sets the logger.
            </summary>
        </member>
        <member name="T:Collections.API.Controllers.V1.MoviesController">
            <summary>
            Movies collection controller
            </summary>
            <seealso cref="T:Collections.API.Controllers.BaseController" />
        </member>
        <member name="F:Collections.API.Controllers.V1.MoviesController.moviesService">
            <summary>
            The movies service
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.MoviesController.#ctor(Collections.API.Services.Interfaces.IMoviesService,Collections.API.Infrastructure.Interfaces.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Controllers.V1.MoviesController"/> class.
            </summary>
            <param name="moviesService">The movies service</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Collections.API.Controllers.V1.MoviesController.GetAsync">
            <summary>
            Retrieve all movies
            </summary>
            <returns><see cref="T:System.Web.Http.IHttpActionResult"/>of all movies</returns>
        </member>
        <member name="M:Collections.API.Controllers.V1.MoviesController.GetByIdAsync(System.String)">
            <summary>
            Retrieve requested movie
            </summary>
            <returns><see cref="T:System.Web.Http.IHttpActionResult"/>of requested movie</returns>
        </member>
        <member name="M:Collections.API.Controllers.V1.MoviesController.PostAsync(Collections.API.Models.MovieModel)">
            <summary>
            Insert new movie to DB
            </summary>
            <param name="model">The model to be posted</param>
            <returns><see cref="T:System.Web.Http.IHttpActionResult"/>OK if successful</returns>
        </member>
        <member name="M:Collections.API.Controllers.V1.MoviesController.PatchAsync(System.String,Collections.API.Models.MovieModel)">
            <summary>
            Updates specified movie
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
            <returns><see cref="T:System.Web.Http.IHttpActionResult"/>OK if successful</returns>
        </member>
        <member name="M:Collections.API.Controllers.V1.MoviesController.DeleteAsync(System.String)">
            <summary>
            Deletes the movie asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <returns><see cref="T:System.Web.Http.IHttpActionResult"/>OK if successful</returns>
        </member>
        <member name="T:Collections.API.Enumerations.LogLevel">
            <summary>
            Log Level.
            </summary>
        </member>
        <member name="F:Collections.API.Enumerations.LogLevel.Debug">
            <summary>
            Is Debug.
            </summary>
        </member>
        <member name="F:Collections.API.Enumerations.LogLevel.Information">
            <summary>
            Is Information.
            </summary>
        </member>
        <member name="F:Collections.API.Enumerations.LogLevel.Warning">
            <summary>
            Is Warning.
            </summary>
        </member>
        <member name="F:Collections.API.Enumerations.LogLevel.Error">
            <summary>
            Is Error.
            </summary>
        </member>
        <member name="F:Collections.API.Enumerations.LogLevel.Fatal">
            <summary>
            Is Fatal.
            </summary>
        </member>
        <member name="T:Collections.API.Factories.Interfaces.IFactory">
            <summary>
            Base interface for Factories
            </summary>
        </member>
        <member name="T:Collections.API.Factories.Interfaces.IMongoFactory`1">
            <summary>
            Interface for the Mongo DB Factory
            </summary>
        </member>
        <member name="M:Collections.API.Factories.Interfaces.IMongoFactory`1.ConnectToCollection">
            <summary>
            Connects to Document DB collection.
            </summary>
            <returns><see cref="T:MongoDB.Driver.IMongoCollection`1"/> of collection from DB</returns>
        </member>
        <member name="T:Collections.API.Factories.MongoFactory`1">
            <summary>
            Factory for connecting to the Document DB
            </summary>
            <typeparam name="T">Type of BSON Document</typeparam>
            <seealso cref="T:Collections.API.Factories.Interfaces.IMongoFactory`1"/>
        </member>
        <member name="F:Collections.API.Factories.MongoFactory`1.configurationService">
            <summary>
            The configuration service
            </summary>
        </member>
        <member name="F:Collections.API.Factories.MongoFactory`1.connectionString">
            <summary>
            The MongoDB connection string
            </summary>
        </member>
        <member name="F:Collections.API.Factories.MongoFactory`1.collection">
            <summary>
            The MongoDB collection
            </summary>
        </member>
        <member name="M:Collections.API.Factories.MongoFactory`1.#ctor(Collections.API.Services.Interfaces.IConfigurationService)">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Factories.MongoFactory`1"/> class.
            </summary>
        </member>
        <member name="M:Collections.API.Factories.MongoFactory`1.ConnectToCollection">
            <summary>
            Connects to Document DB collection.
            </summary>
            <returns><see cref="T:MongoDB.Driver.IMongoCollection`1"/> of collection from DB</returns>
        </member>
        <member name="T:Collections.API.Infrastructure.BsonMapConfig">
            <summary>
            The mapping config for Mongo DB BSON documents
            </summary>
        </member>
        <member name="M:Collections.API.Infrastructure.BsonMapConfig.Configure">
            <summary>
            Configures this instance.
            </summary>
        </member>
        <member name="T:Collections.API.Infrastructure.DependencyRegistrar">
            <summary>
            The Dependency registrar used for setting up DI container.
            </summary>
        </member>
        <member name="M:Collections.API.Infrastructure.DependencyRegistrar.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Registers the specified configuration.
            </summary>
            <param name="config">The configuration.</param>
        </member>
        <member name="T:Collections.API.Infrastructure.Interfaces.ILogger">
            <summary>
            Interface for the Logger
            </summary>
        </member>
        <member name="M:Collections.API.Infrastructure.Interfaces.ILogger.IsEnabled(Collections.API.Enumerations.LogLevel)">
            <summary>
            Check if the level is enabled.
            </summary>
            <param name="level">The log level to check.</param>
            <returns>true or false.</returns>
        </member>
        <member name="M:Collections.API.Infrastructure.Interfaces.ILogger.Log(Collections.API.Enumerations.LogLevel,System.Exception,System.String)">
            <summary>
            Log message at specified log level.
            </summary>
            <param name="level">The log level.</param>
            <param name="exception">The exception that was thrown to log.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.Interfaces.ILogger.Log(Collections.API.Enumerations.LogLevel,System.Exception,System.String,System.Object[])">
            <summary>
            Log formatted message at specified log level.
            </summary>
            <param name="level">The log level.</param>
            <param name="exception">The exception that was thrown to log.</param>
            <param name="format">The composite format message to log.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.Interfaces.ILogger.Log(Collections.API.Enumerations.LogLevel,System.String)">
            <summary>
            Log message at specified log level.
            </summary>
            <param name="level">The log level.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.Interfaces.ILogger.Log(Collections.API.Enumerations.LogLevel,System.String,System.Object[])">
            <summary>
            Log formatted message at specified log level.
            </summary>
            <param name="level">The log level.</param>
            <param name="format">The composite format message to log.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="T:Collections.API.Infrastructure.Logger">
            <summary>
            Implementation of Log 4 Net
            </summary>
            <seealso cref="T:Collections.API.Infrastructure.Interfaces.ILogger" />
        </member>
        <member name="F:Collections.API.Infrastructure.Logger.log">
            <summary>
            Log 4 Net instance.
            </summary>
        </member>
        <member name="M:Collections.API.Infrastructure.Logger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Infrastructure.Logger"/> class.
            </summary>
        </member>
        <member name="M:Collections.API.Infrastructure.Logger.#ctor(log4net.ILog)">
            <summary>
             Initializes a new instance of the <see cref="T:Collections.API.Infrastructure.Logger"/> class. Excepting a log 4 net instance.
            </summary>
            <param name="log">Log4Net Instance.</param>
        </member>
        <member name="P:Collections.API.Infrastructure.Logger.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Collections.API.Infrastructure.Logger.Repository">
            <summary>
            Gets the repository.
            </summary>
        </member>
        <member name="M:Collections.API.Infrastructure.Logger.IsEnabled(Collections.API.Enumerations.LogLevel)">
            <summary>
            Check if the level is enabled.
            </summary>
            <param name="level">The log level to check.</param>
            <returns>True or false.</returns>
        </member>
        <member name="M:Collections.API.Infrastructure.Logger.Log(Collections.API.Enumerations.LogLevel,System.Exception,System.String)">
            <summary>
            Log message at specified log level.
            </summary>
            <param name="level">The log level.</param>
            <param name="exception">The exception that was thrown to log.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.Logger.Log(Collections.API.Enumerations.LogLevel,System.Exception)">
            <summary>
            Log message at specified log level.
            </summary>
            <param name="level">The log level.</param>
            <param name="exception">The exception that was thrown to log.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.Logger.Log(Collections.API.Enumerations.LogLevel,System.Exception,System.String,System.Object[])">
            <summary>
            Log formatted message at specified log level .
            </summary>
            <param name="level">The log level.</param>
            <param name="exception">The exception that was thrown to log.</param>
            <param name="format">The composite format message to log.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.Logger.Log(Collections.API.Enumerations.LogLevel,System.String)">
            <summary>
            Log message at specified log level.
            </summary>
            <param name="level">The log level.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.Logger.Log(Collections.API.Enumerations.LogLevel,System.String,System.Object[])">
            <summary>
            Log formatted message at specified log level. 
            </summary>
            <param name="level">The log level.</param>
            <param name="format">The composite format message to log.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="T:Collections.API.Infrastructure.AutoMapConfig">
            <summary>
            The Auto mapper profile config
            </summary>
        </member>
        <member name="M:Collections.API.Infrastructure.AutoMapConfig.Configure">
            <summary>
            Configures this instance.
            </summary>
        </member>
        <member name="T:Collections.API.Mapper.Interfaces.IMapper">
            <summary>
            Interface for mapper.
            </summary>
        </member>
        <member name="M:Collections.API.Mapper.Interfaces.IMapper.Map``1(System.Object)">
            <summary>
            Maps object to that of type T.
            </summary>
            <typeparam name="T"> Type that is being mapped to.</typeparam>
            <param name="mapFrom">The map from.</param>
            <returns>Instance of T.</returns>
        </member>
        <member name="T:Collections.API.Mapper.Mapper">
            <summary>
            Maps object using AutoMapper.
            </summary>
        </member>
        <member name="M:Collections.API.Mapper.Mapper.Map``1(System.Object)">
            <summary>
            Maps object to that of type T.
            </summary>
            <typeparam name="T">Type that is being mapped to.</typeparam>
            <param name="mapFrom">The map from.</param>
            <returns>
            Instance of T.
            </returns>
        </member>
        <member name="T:Collections.API.Mapper.Profiles.MoviesProfile">
            <summary>
            Class for movies AutoMapper config profiles
            </summary>
            <seealso cref="T:AutoMapper.Profile" />
        </member>
        <member name="M:Collections.API.Mapper.Profiles.MoviesProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Mapper.Profiles.MoviesProfile"/> class.
            </summary>
        </member>
        <member name="T:Collections.API.Models.Interfaces.IMovieModel">
            <summary>
            Interface for the Movie Model
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Directors">
            <summary>
            Gets or sets the directors.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Cast">
            <summary>
            Gets or sets the cast.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Producers">
            <summary>
            Gets or sets the producers.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Writers">
            <summary>
            Gets or sets the writers.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Music">
            <summary>
            Gets or sets the music.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.ReleaseDate">
            <summary>
            Gets or sets the release date.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.RunningTime">
            <summary>
            Gets or sets the running time.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Rating">
            <summary>
            Gets or sets the rating.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.PosterUrl">
            <summary>
            Gets or sets the poster URL.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Series">
            <summary>
            Gets or sets the series.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.SeriesNumber">
            <summary>
            Gets or sets the series number.
            </summary>
        </member>
        <member name="T:Collections.API.Models.MovieModel">
            <summary>
            Model for movie data
            </summary>
            <seealso cref="T:Collections.API.Models.Interfaces.IMovieModel" />
        </member>
        <member name="P:Collections.API.Models.MovieModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Directors">
            <summary>
            Gets or sets the directors.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Cast">
            <summary>
            Gets or sets the cast.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Producers">
            <summary>
            Gets or sets the producers.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Writers">
            <summary>
            Gets or sets the writers.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Music">
            <summary>
            Gets or sets the music.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.ReleaseDate">
            <summary>
            Gets or sets the release date.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.RunningTime">
            <summary>
            Gets or sets the running time.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Rating">
            <summary>
            Gets or sets the rating.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.PosterUrl">
            <summary>
            Gets or sets the poster URL.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Series">
            <summary>
            Gets or sets the series.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.SeriesNumber">
            <summary>
            Gets or sets the series number.
            </summary>
        </member>
        <member name="T:Collections.API.Repositories.Interfaces.IMoviesRepository">
            <summary>
            Interface for the movies repository
            </summary>
            <seealso cref="T:Collections.API.Repositories.Interfaces.IRepository" />
        </member>
        <member name="M:Collections.API.Repositories.Interfaces.IMoviesRepository.GetAsync">
            <summary>
            Gets the movies asynchronously.
            </summary>
            <returns><see cref="T:System.Collections.Generic.IEnumerable`1"/>collection of movies</returns>
        </member>
        <member name="M:Collections.API.Repositories.Interfaces.IMoviesRepository.GetByIdAsync(System.String)">
            <summary>
            Gets the requested movie asynchronously.
            </summary>
            <returns><see cref="T:Collections.API.Models.Interfaces.IMovieModel"/>requeted movie</returns>
        </member>
        <member name="M:Collections.API.Repositories.Interfaces.IMoviesRepository.PostAsync(Collections.API.Models.MovieModel)">
            <summary>
            Posts the movie asynchronously
            </summary>
            <param name="model">The model to be posted</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Repositories.Interfaces.IMoviesRepository.PatchAsync(System.String,Collections.API.Models.MovieModel)">
            <summary>
            Patches specified movie asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Repositories.Interfaces.IMoviesRepository.DeleteAsync(System.String)">
            <summary>
            Deletes specified movie asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <returns>True if successful</returns>
        </member>
        <member name="T:Collections.API.Repositories.Interfaces.IRepository">
            <summary>
            Base repository
            </summary>
        </member>
        <member name="T:Collections.API.Repositories.MoviesRepository">
            <summary>
            Repository for movie data
            </summary>
            <seealso cref="T:Collections.API.Repositories.Interfaces.IMoviesRepository" />
        </member>
        <member name="F:Collections.API.Repositories.MoviesRepository.movieFactory">
            <summary>
            The movie factory
            </summary>
        </member>
        <member name="F:Collections.API.Repositories.MoviesRepository.movieCollection">
            <summary>
            The movie collection
            </summary>
        </member>
        <member name="F:Collections.API.Repositories.MoviesRepository.configurationService">
            <summary>
            The configuration service
            </summary>
        </member>
        <member name="M:Collections.API.Repositories.MoviesRepository.#ctor(Collections.API.Services.Interfaces.IConfigurationService)">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Repositories.MoviesRepository"/> class.
            </summary>
            <param name="configurationService">The configuration service</param>
        </member>
        <member name="M:Collections.API.Repositories.MoviesRepository.GetAsync">
            <summary>
            Gets the movies asynchronously.
            </summary>
            <returns><see cref="T:System.Collections.Generic.IEnumerable`1"/>collection of movies</returns>
        </member>
        <member name="M:Collections.API.Repositories.MoviesRepository.GetByIdAsync(System.String)">
            <summary>
            Gets the requested movie asynchronously.
            </summary>
            <returns><see cref="T:Collections.API.Models.Interfaces.IMovieModel"/>requeted movie</returns>
        </member>
        <member name="M:Collections.API.Repositories.MoviesRepository.PostAsync(Collections.API.Models.MovieModel)">
            <summary>
            Posts the movie asynchronously
            </summary>
            <param name="model">The model to be posted</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Repositories.MoviesRepository.PatchAsync(System.String,Collections.API.Models.MovieModel)">
            <summary>
            Patches specified movie asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Repositories.MoviesRepository.DeleteAsync(System.String)">
            <summary>
            Deletes specified movie asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <returns>True if successful</returns>
        </member>
        <member name="T:Collections.API.Services.ConfigurationService">
            <summary>
            Service for the retrieval of configuration for the app
            </summary>
            <seealso cref="T:Collections.API.Services.Interfaces.IConfigurationService" />
        </member>
        <member name="M:Collections.API.Services.ConfigurationService.GetAppSetting(System.String)">
            <summary>
            Gets the app setting after being passed a key.
            </summary>
            <param name="key">The key of the app setting that is being returned.</param>
            <returns>An app setting.</returns>
        </member>
        <member name="M:Collections.API.Services.ConfigurationService.GetConnectionString(System.String)">
            <summary>
            Gets the connection string.
            </summary>
            <param name="key">The key.</param>
            <returns>A connection string</returns>
        </member>
        <member name="T:Collections.API.Services.Interfaces.IConfigurationService">
            <summary>
            Interface for the configuration service
            </summary>
            <seealso cref="T:Collections.API.Services.Interfaces.IService" />
        </member>
        <member name="M:Collections.API.Services.Interfaces.IConfigurationService.GetAppSetting(System.String)">
            <summary>
            Gets the app setting after being passed a key.
            </summary>
            <param name="key">The key of the app setting that is being returned.</param>
            <returns>An app setting.</returns>
        </member>
        <member name="M:Collections.API.Services.Interfaces.IConfigurationService.GetConnectionString(System.String)">
            <summary>
            Gets the connection string.
            </summary>
            <param name="key">The key.</param>
            <returns>A connection string</returns>
        </member>
        <member name="T:Collections.API.Services.Interfaces.IMoviesService">
            <summary>
            Interface for the movies service
            </summary>
            <seealso cref="T:Collections.API.Services.Interfaces.IService" />
        </member>
        <member name="M:Collections.API.Services.Interfaces.IMoviesService.GetAsync">
            <summary>
            Gets the movies asynchronously.
            </summary>
            <returns><see cref="T:System.Collections.Generic.IEnumerable`1"/>collection of movies</returns>
        </member>
        <member name="M:Collections.API.Services.Interfaces.IMoviesService.GetByIdAsync(System.String)">
            <summary>
            Gets the requested movie asynchronously.
            </summary>
            <param name="id">the identifier</param>
            <returns><see cref="T:Collections.API.ViewModels.MovieDetailViewModel"/>requested movie</returns>
        </member>
        <member name="M:Collections.API.Services.Interfaces.IMoviesService.PostAsync(Collections.API.Models.MovieModel)">
            <summary>
            Posts the movie model asynchronously
            </summary>
            <param name="model">The model to be posted</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Services.Interfaces.IMoviesService.PatchAsync(System.String,Collections.API.Models.MovieModel)">
            <summary>
            Patches specified the movie asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Services.Interfaces.IMoviesService.DeleteAsync(System.String)">
            <summary>
            Deletes specified the movie asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <returns>True if successful</returns>
        </member>
        <member name="T:Collections.API.Services.Interfaces.IService">
            <summary>
            Base service class
            </summary>
        </member>
        <member name="T:Collections.API.Services.MoviesService">
            <summary>
            The movies service
            </summary>
            <seealso cref="T:Collections.API.Services.Interfaces.IMoviesService" />
        </member>
        <member name="F:Collections.API.Services.MoviesService.moviesRepository">
            <summary>
            The movies repository
            </summary>
        </member>
        <member name="F:Collections.API.Services.MoviesService.mapper">
            <summary>
            The mapper
            </summary>
        </member>
        <member name="M:Collections.API.Services.MoviesService.#ctor(Collections.API.Repositories.Interfaces.IMoviesRepository,Collections.API.Mapper.Interfaces.IMapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Services.MoviesService"/> class.
            </summary>
            <param name="moviesRepository">The movies repository.</param>
            <param name="mapper">The mapper</param>
        </member>
        <member name="M:Collections.API.Services.MoviesService.GetAsync">
            <summary>
            Gets the movies asynchronously.
            </summary>
            <returns><see cref="T:System.Collections.Generic.IEnumerable`1"/>collection of movies</returns>
        </member>
        <member name="M:Collections.API.Services.MoviesService.GetByIdAsync(System.String)">
            <summary>
            Gets the requested movie asynchronously.
            </summary>
            <returns><see cref="T:Collections.API.ViewModels.MovieDetailViewModel"/>requested movie</returns>
        </member>
        <member name="M:Collections.API.Services.MoviesService.PostAsync(Collections.API.Models.MovieModel)">
            <summary>
            Posts the movie model asynchronously
            </summary>
            <param name="model">The model to be posted</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Services.MoviesService.PatchAsync(System.String,Collections.API.Models.MovieModel)">
            <summary>
            Patches specified the movie asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Services.MoviesService.DeleteAsync(System.String)">
            <summary>
            Deletes specified the movie asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <returns>True if successful</returns>
        </member>
        <member name="T:Collections.API.Startup">
            <summary>
            Startup class
            </summary>
        </member>
        <member name="M:Collections.API.Startup.Configuration(Owin.IAppBuilder)">
            <summary>
            Configurations the specified application.
            </summary>
            <param name = "app">The application.</param>
        </member>
        <member name="T:Collections.API.ViewModels.MovieDetailViewModel">
            <summary>
            View model for the movie data
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Directors">
            <summary>
            Gets or sets the directors.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Cast">
            <summary>
            Gets or sets the cast.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Producers">
            <summary>
            Gets or sets the producers.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Writers">
            <summary>
            Gets or sets the writers.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Music">
            <summary>
            Gets or sets the music.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.ReleaseDate">
            <summary>
            Gets or sets the release date.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.RunningTime">
            <summary>
            Gets or sets the running time.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Rating">
            <summary>
            Gets or sets the rating.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.PosterUrl">
            <summary>
            Gets or sets the poster URL.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Series">
            <summary>
            Gets or sets the series.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.SeriesNumber">
            <summary>
            Gets or sets the series number.
            </summary>
        </member>
        <member name="T:Collections.API.ViewModels.MovieViewModel">
            <summary>
            View model for the movie data
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieViewModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieViewModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieViewModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieViewModel.Directors">
            <summary>
            Gets or sets the directors.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieViewModel.Cast">
            <summary>
            Gets or sets the cast.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieViewModel.RunningTime">
            <summary>
            Gets or sets the running time.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieViewModel.PosterUrl">
            <summary>
            Gets or sets the poster URL.
            </summary>
        </member>
        <member name="T:Collection.SwaggerConfig">
            <summary>
            The swagger configuration
            </summary>
        </member>
        <member name="M:Collection.SwaggerConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Registers the specified configuration.
            </summary>
            <param name="config">The configuration.</param>
        </member>
        <member name="M:Collection.SwaggerConfig.GetXmlCommentsPath">
            <summary>
            Gets the XML comments path.
            </summary>
            <returns>Path to Xml document</returns>
        </member>
    </members>
</doc>
