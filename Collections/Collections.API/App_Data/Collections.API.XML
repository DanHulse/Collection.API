<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Collections.API</name>
    </assembly>
    <members>
        <member name="T:Collections.API.App_Start.RouteConfig">
            <summary>
            The Route config.
            </summary>
        </member>
        <member name="M:Collections.API.App_Start.RouteConfig.RegisterRoutes(System.Web.Routing.RouteCollection)">
            <summary>
            Registers the routes.
            </summary>
            <param name="routes">The routes.</param>
        </member>
        <member name="T:Collections.API.App_Start.WebApiConfig">
            <summary>
            Web API configuration
            </summary>
        </member>
        <member name="M:Collections.API.App_Start.WebApiConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Registers the specified configuration.
            </summary>
            <param name="config">The configuration.</param>
        </member>
        <member name="T:Collections.API.Controllers.BaseController">
            <summary>
            The Base controller
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="P:Collections.API.Controllers.BaseController.Logger">
            <summary>
            Gets or sets the logger.
            </summary>
        </member>
        <member name="T:Collections.API.Controllers.V1.AlbumsController">
            <summary>
            Albums Controller
            </summary>
            <seealso cref="T:Collections.API.Controllers.V1.DataController`3" />
        </member>
        <member name="M:Collections.API.Controllers.V1.AlbumsController.#ctor(Collections.API.Services.Interfaces.IDataService,Collections.API.Mapper.Interfaces.IMapper,Collections.API.Infrastructure.Interfaces.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Controllers.V1.AlbumsController"/> class.
            </summary>
            <param name="dataService">The data service.</param>
            <param name="mapper">The mapper.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Collections.API.Controllers.V1.AlbumsController.GetAsync">
            <summary>
            Retrieve all data records of the data type specified
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.AlbumsController.GetByIdAsync(System.String)">
            <summary>
            Retrieve requested record
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.AlbumsController.PostAsync(System.Collections.Generic.IEnumerable{Collections.API.Models.AlbumModel})">
            <summary>
            Insert new records to DB of specified type
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.AlbumsController.PutAsync(System.String,Collections.API.Models.AlbumModel)">
            <summary>
            Replaces the specified record with the new model
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.AlbumsController.DeleteAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Deletes the records of the specified type asynchronously.
            </summary>
        </member>
        <member name="T:Collections.API.Controllers.V1.VideoGamesController">
            <summary>
            Video Games Controller
            </summary>
            <seealso cref="T:Collections.API.Controllers.V1.DataController`3" />
        </member>
        <member name="M:Collections.API.Controllers.V1.VideoGamesController.#ctor(Collections.API.Services.Interfaces.IDataService,Collections.API.Mapper.Interfaces.IMapper,Collections.API.Infrastructure.Interfaces.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Controllers.V1.VideoGamesController"/> class.
            </summary>
            <param name="dataService">The data service.</param>
            <param name="mapper">The mapper.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Collections.API.Controllers.V1.VideoGamesController.GetAsync">
            <summary>
            Retrieve all data records of the data type specified
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.VideoGamesController.GetByIdAsync(System.String)">
            <summary>
            Retrieve requested record
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.VideoGamesController.PostAsync(System.Collections.Generic.IEnumerable{Collections.API.Models.VideoGameModel})">
            <summary>
            Insert new records to DB of specified type
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.VideoGamesController.PutAsync(System.String,Collections.API.Models.VideoGameModel)">
            <summary>
            Replaces the specified record with the new model
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.VideoGamesController.DeleteAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Deletes the records of the specified type asynchronously.
            </summary>
        </member>
        <member name="T:Collections.API.Controllers.V1.DataController`3">
            <summary>
            Data collections controller
            </summary>
            <typeparam name="T">The inteface type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <typeparam name="S">The view model type</typeparam>
            <seealso cref="T:Collections.API.Controllers.BaseController" />
        </member>
        <member name="F:Collections.API.Controllers.V1.DataController`3.dataService">
            <summary>
            The data service
            </summary>
        </member>
        <member name="F:Collections.API.Controllers.V1.DataController`3.mapper">
            <summary>
            The mapper
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.DataController`3.#ctor(Collections.API.Services.Interfaces.IDataService,Collections.API.Mapper.Interfaces.IMapper,Collections.API.Infrastructure.Interfaces.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Controllers.V1.DataController`3"/> class.
            </summary>
            <param name="dataService">The data service.</param>
            <param name="mapper">The mapper.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Collections.API.Controllers.V1.DataController`3.GetAsync">
            <summary>
            Retrieve all data records of the data type specified
            </summary>
            <returns><see cref="T:System.Web.Http.IHttpActionResult"/>of all records</returns>
        </member>
        <member name="M:Collections.API.Controllers.V1.DataController`3.GetByIdAsync(System.String)">
            <summary>
            Retrieve requested record
            </summary>
            <returns><see cref="T:System.Web.Http.IHttpActionResult"/>of requested record</returns>
        </member>
        <member name="M:Collections.API.Controllers.V1.DataController`3.PostAsync(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Insert new records to DB of specified type
            </summary>
            <param name="model">The record to be posted</param>
            <returns><see cref="T:System.Web.Http.IHttpActionResult"/>OK if successful</returns>
        </member>
        <member name="M:Collections.API.Controllers.V1.DataController`3.PatchAsync(System.String,`1)">
            <summary>
            Updates specified record
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
            <returns><see cref="T:System.Web.Http.IHttpActionResult"/>OK if successful</returns>
        </member>
        <member name="M:Collections.API.Controllers.V1.DataController`3.PutAsync(System.String,`1)">
            <summary>
            Replaces the specified record with the new model
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
            <returns><see cref="T:System.Web.Http.IHttpActionResult"/>OK if successful</returns>
        </member>
        <member name="M:Collections.API.Controllers.V1.DataController`3.DeleteAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Deletes the records of the specified type asynchronously.
            </summary>
            <param name="ids">The identifiers of the records to delete.</param>
            <returns><see cref="T:System.Web.Http.IHttpActionResult"/>OK if successful</returns>
        </member>
        <member name="T:Collections.API.Controllers.V1.BooksController">
            <summary>
            Books Controller
            </summary>
            <seealso cref="T:Collections.API.Controllers.V1.DataController`3" />
        </member>
        <member name="M:Collections.API.Controllers.V1.BooksController.#ctor(Collections.API.Services.Interfaces.IDataService,Collections.API.Mapper.Interfaces.IMapper,Collections.API.Infrastructure.Interfaces.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Controllers.V1.BooksController"/> class.
            </summary>
            <param name="dataService">The data service.</param>
            <param name="mapper">The mapper.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Collections.API.Controllers.V1.BooksController.GetAsync">
            <summary>
            Retrieve all data records of the data type specified
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.BooksController.GetByIdAsync(System.String)">
            <summary>
            Retrieve requested record
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.BooksController.PostAsync(System.Collections.Generic.IEnumerable{Collections.API.Models.BookModel})">
            <summary>
            Insert new records to DB of specified type
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.BooksController.PutAsync(System.String,Collections.API.Models.BookModel)">
            <summary>
            Replaces the specified record with the new model
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.BooksController.DeleteAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Deletes the records of the specified type asynchronously.
            </summary>
        </member>
        <member name="T:Collections.API.Controllers.V1.MoviesController">
            <summary>
            Movies Controller
            </summary>
            <seealso cref="T:Collections.API.Controllers.V1.DataController`3" />
        </member>
        <member name="M:Collections.API.Controllers.V1.MoviesController.#ctor(Collections.API.Services.Interfaces.IDataService,Collections.API.Mapper.Interfaces.IMapper,Collections.API.Infrastructure.Interfaces.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Controllers.V1.MoviesController"/> class.
            </summary>
            <param name="dataService">The data service.</param>
            <param name="mapper">The mapper.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Collections.API.Controllers.V1.MoviesController.GetAsync">
            <summary>
            Retrieve all data records of the data type specified
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.MoviesController.GetByIdAsync(System.String)">
            <summary>
            Retrieve requested record
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.MoviesController.PostAsync(System.Collections.Generic.IEnumerable{Collections.API.Models.MovieModel})">
            <summary>
            Insert new records to DB of specified type
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.MoviesController.PutAsync(System.String,Collections.API.Models.MovieModel)">
            <summary>
            Replaces the specified record with the new model
            </summary>
        </member>
        <member name="M:Collections.API.Controllers.V1.MoviesController.DeleteAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Deletes the records of the specified type asynchronously.
            </summary>
        </member>
        <member name="T:Collections.API.Enumerations.DataType">
            <summary>
            Enumeration for the different data types
            </summary>
        </member>
        <member name="F:Collections.API.Enumerations.DataType.Movies">
            <summary>
            The movies type
            </summary>
        </member>
        <member name="F:Collections.API.Enumerations.DataType.Books">
            <summary>
            The books type
            </summary>
        </member>
        <member name="F:Collections.API.Enumerations.DataType.Albums">
            <summary>
            The albums type
            </summary>
        </member>
        <member name="F:Collections.API.Enumerations.DataType.VideoGames">
            <summary>
            The video games type
            </summary>
        </member>
        <member name="T:Collections.API.Enumerations.LogLevel">
            <summary>
            Log Level.
            </summary>
        </member>
        <member name="F:Collections.API.Enumerations.LogLevel.Debug">
            <summary>
            Is Debug.
            </summary>
        </member>
        <member name="F:Collections.API.Enumerations.LogLevel.Information">
            <summary>
            Is Information.
            </summary>
        </member>
        <member name="F:Collections.API.Enumerations.LogLevel.Warning">
            <summary>
            Is Warning.
            </summary>
        </member>
        <member name="F:Collections.API.Enumerations.LogLevel.Error">
            <summary>
            Is Error.
            </summary>
        </member>
        <member name="F:Collections.API.Enumerations.LogLevel.Fatal">
            <summary>
            Is Fatal.
            </summary>
        </member>
        <member name="T:Collections.API.Factories.Interfaces.IFactory">
            <summary>
            Base interface for Factories
            </summary>
        </member>
        <member name="T:Collections.API.Factories.Interfaces.IMongoFactory">
            <summary>
            Interface for the Mongo DB Factory
            </summary>
        </member>
        <member name="M:Collections.API.Factories.Interfaces.IMongoFactory.ConnectToCollection``1">
            <summary>
            Connects to Document DB collection.
            </summary>
            <returns><see cref="T:MongoDB.Driver.IMongoCollection`1"/> of collection from DB</returns>
        </member>
        <member name="T:Collections.API.Factories.MongoFactory">
            <summary>
            Factory for connecting to the Document DB
            </summary>
            <seealso cref="T:Collections.API.Factories.Interfaces.IMongoFactory"/>
        </member>
        <member name="F:Collections.API.Factories.MongoFactory.configurationService">
            <summary>
            The configuration service
            </summary>
        </member>
        <member name="F:Collections.API.Factories.MongoFactory.connectionString">
            <summary>
            The MongoDB connection string
            </summary>
        </member>
        <member name="F:Collections.API.Factories.MongoFactory.collection">
            <summary>
            The MongoDB collection
            </summary>
        </member>
        <member name="M:Collections.API.Factories.MongoFactory.#ctor(Collections.API.Services.Interfaces.IConfigurationService)">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Factories.MongoFactory"/> class.
            </summary>
            <param name="configurationService">The configuration service.</param>
        </member>
        <member name="M:Collections.API.Factories.MongoFactory.ConnectToCollection``1">
            <summary>
            Connects to Document DB collection.
            </summary>
            <returns><see cref="T:MongoDB.Driver.IMongoCollection`1"/> of collection from DB</returns>
        </member>
        <member name="T:Collections.API.Helpers.ObjectToDictionaryHelper">
            <summary>
            Helper method to convert an object into a dictionary of it's properties
            Found on GiyHub: https://gist.github.com/jarrettmeyer/798667
            </summary>
        </member>
        <member name="M:Collections.API.Helpers.ObjectToDictionaryHelper.ToDictionary(System.Object)">
            <summary>
            Translates object to the dictionary.
            </summary>
            <param name="source">The source.</param>
            <returns><see cref="T:System.Collections.Generic.IDictionary`2"/>from object</returns>
        </member>
        <member name="M:Collections.API.Helpers.ObjectToDictionaryHelper.ToDictionary``1(System.Object)">
            <summary>
            Translates object to the dictionary.
            </summary>
            <typeparam name="T">The provided object type</typeparam>
            <param name="source">The source.</param>
            <returns><see cref="T:System.Collections.Generic.IDictionary`2"/>from object</returns>
        </member>
        <member name="M:Collections.API.Helpers.ObjectToDictionaryHelper.AddPropertyToDictionary``1(System.ComponentModel.PropertyDescriptor,System.Object,System.Collections.Generic.Dictionary{System.String,``0})">
            <summary>
            Adds the property to dictionary.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="property">The property.</param>
            <param name="source">The source.</param>
            <param name="dictionary">The dictionary.</param>
        </member>
        <member name="M:Collections.API.Helpers.ObjectToDictionaryHelper.IsOfType``1(System.Object)">
            <summary>
            Determines whether property is of the specified type.
            </summary>
            <typeparam name="T">The type of the property</typeparam>
            <param name="value">The value.</param>
            <returns>True if the property is of the specified type.</returns>
        </member>
        <member name="M:Collections.API.Helpers.ObjectToDictionaryHelper.ThrowExceptionWhenSourceArgumentIsNull">
            <summary>
            Throws the exception when source argument is null.
            </summary>
            <exception cref="T:System.ArgumentNullException">source - Unable to convert object to a dictionary. The source object is null.</exception>
        </member>
        <member name="T:Collections.API.Infrastructure.BsonMapConfig">
            <summary>
            The mapping config for Mongo DB BSON documents
            </summary>
        </member>
        <member name="M:Collections.API.Infrastructure.BsonMapConfig.Configure">
            <summary>
            Configures this instance.
            </summary>
        </member>
        <member name="T:Collections.API.Infrastructure.DataCollection">
            <summary>
            Wrapper class for the Mongo DB Collection
            </summary>
            <seealso cref="T:Collections.API.Infrastructure.Interfaces.IDataCollection" />
        </member>
        <member name="F:Collections.API.Infrastructure.DataCollection.mongoFactory">
            <summary>
            The mongo DB factory
            </summary>
        </member>
        <member name="M:Collections.API.Infrastructure.DataCollection.#ctor(Collections.API.Factories.Interfaces.IMongoFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Infrastructure.DataCollection"/> class.
            </summary>
            <param name="mongoFactory">The mongo DB factory.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.DataCollection.FindOneAsync``1(MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Finds one record asynchronously.
            </summary>
            <typeparam name="T">The filter type</typeparam>
            <param name="filter">The filter.</param>
            <returns>Retrieved record</returns>
        </member>
        <member name="M:Collections.API.Infrastructure.DataCollection.FindManyAsync``1(MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Finds many records asynchronously.
            </summary>
            <typeparam name="T">The filter type</typeparam>
            <param name="filter">The filter.</param>
            <returns>Retrived records</returns>
        </member>
        <member name="M:Collections.API.Infrastructure.DataCollection.InsertOneAsync``2(``1)">
            <summary>
            Inserts one record asynchronously.
            </summary>
            <typeparam name="T">The filter type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <param name="model">The model.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.DataCollection.InsertManyAsync``2(System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Inserts many records asynchronously.
            </summary>
            <typeparam name="T">The filter type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <param name="models">The models.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.DataCollection.UpdateOneAsync``1(MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.UpdateDefinition{``0})">
            <summary>
            Updates one record asynchronously.
            </summary>
            <typeparam name="T">The filter type</typeparam>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <returns><see cref="T:MongoDB.Driver.UpdateResult"/>result of update operation</returns>
        </member>
        <member name="M:Collections.API.Infrastructure.DataCollection.ReplaceOneAsync``2(MongoDB.Driver.FilterDefinition{``0},``1)">
            <summary>
            Replaces one document asynchronously.
            </summary>
            <typeparam name="T">The filter type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <param name="filter">The filter.</param>
            <param name="model">The model.</param>
            <returns><see cref="T:MongoDB.Driver.ReplaceOneResult"/>result of replace operation</returns>
        </member>
        <member name="M:Collections.API.Infrastructure.DataCollection.DeleteManyAsync``1(MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Deletes many records asynchronously.
            </summary>
            <typeparam name="T">The filter type</typeparam>
            <param name="filter">The filter.</param>
            <returns><see cref="T:MongoDB.Driver.DeleteResult"/>result of delete operation</returns>
        </member>
        <member name="M:Collections.API.Infrastructure.DataCollection.RetrieveCollection``1">
            <summary>
            Retrieves the collection.
            </summary>
            <typeparam name="T">Model of collection</typeparam>
            <returns>Mongo DB collection</returns>
        </member>
        <member name="T:Collections.API.Infrastructure.DependencyRegistrar">
            <summary>
            The Dependency registrar used for setting up DI container.
            </summary>
        </member>
        <member name="M:Collections.API.Infrastructure.DependencyRegistrar.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Registers the specified configuration.
            </summary>
            <param name="config">The configuration.</param>
        </member>
        <member name="T:Collections.API.Infrastructure.Interfaces.IDataCollection">
            <summary>
            Interface for the Data Collection wrapper class
            </summary>
        </member>
        <member name="M:Collections.API.Infrastructure.Interfaces.IDataCollection.FindOneAsync``1(MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Finds one record asynchronously.
            </summary>
            <typeparam name="T">The filter type</typeparam>
            <param name="filter">The filter.</param>
            <returns>Retrieved record</returns>
        </member>
        <member name="M:Collections.API.Infrastructure.Interfaces.IDataCollection.FindManyAsync``1(MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Finds many records asynchronously.
            </summary>
            <typeparam name="T">The filter type</typeparam>
            <param name="filter">The filter.</param>
            <returns>Retrived records</returns>
        </member>
        <member name="M:Collections.API.Infrastructure.Interfaces.IDataCollection.InsertOneAsync``2(``1)">
            <summary>
            Inserts one record asynchronously.
            </summary>
            <typeparam name="T">The filter type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <param name="model">The model.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.Interfaces.IDataCollection.InsertManyAsync``2(System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Inserts many records asynchronously.
            </summary>
            <typeparam name="T">The filter type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <param name="models">The models.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.Interfaces.IDataCollection.UpdateOneAsync``1(MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.UpdateDefinition{``0})">
            <summary>
            Updates one record asynchronously.
            </summary>
            <typeparam name="T">The filter type</typeparam>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <returns><see cref="T:MongoDB.Driver.UpdateResult"/>result of update operation</returns>
        </member>
        <member name="M:Collections.API.Infrastructure.Interfaces.IDataCollection.ReplaceOneAsync``2(MongoDB.Driver.FilterDefinition{``0},``1)">
            <summary>
            Replaces one document asynchronously.
            </summary>
            <typeparam name="T">The filter type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <param name="filter">The filter.</param>
            <param name="model">The model.</param>
            <returns><see cref="T:MongoDB.Driver.ReplaceOneResult"/>result of replace operation</returns>
        </member>
        <member name="M:Collections.API.Infrastructure.Interfaces.IDataCollection.DeleteManyAsync``1(MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Deletes many records asynchronously.
            </summary>
            <typeparam name="T">The filter type</typeparam>
            <param name="filter">The filter.</param>
            <returns><see cref="T:MongoDB.Driver.DeleteResult"/>result of delete operation</returns>
        </member>
        <member name="T:Collections.API.Infrastructure.Interfaces.ILogger">
            <summary>
            Interface for the Logger
            </summary>
        </member>
        <member name="M:Collections.API.Infrastructure.Interfaces.ILogger.IsEnabled(Collections.API.Enumerations.LogLevel)">
            <summary>
            Check if the level is enabled.
            </summary>
            <param name="level">The log level to check.</param>
            <returns>true or false.</returns>
        </member>
        <member name="M:Collections.API.Infrastructure.Interfaces.ILogger.Log(Collections.API.Enumerations.LogLevel,System.Exception,System.String)">
            <summary>
            Log message at specified log level.
            </summary>
            <param name="level">The log level.</param>
            <param name="exception">The exception that was thrown to log.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.Interfaces.ILogger.Log(Collections.API.Enumerations.LogLevel,System.Exception,System.String,System.Object[])">
            <summary>
            Log formatted message at specified log level.
            </summary>
            <param name="level">The log level.</param>
            <param name="exception">The exception that was thrown to log.</param>
            <param name="format">The composite format message to log.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.Interfaces.ILogger.Log(Collections.API.Enumerations.LogLevel,System.String)">
            <summary>
            Log message at specified log level.
            </summary>
            <param name="level">The log level.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.Interfaces.ILogger.Log(Collections.API.Enumerations.LogLevel,System.String,System.Object[])">
            <summary>
            Log formatted message at specified log level.
            </summary>
            <param name="level">The log level.</param>
            <param name="format">The composite format message to log.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="T:Collections.API.Infrastructure.Logger">
            <summary>
            Implementation of Log 4 Net
            </summary>
            <seealso cref="T:Collections.API.Infrastructure.Interfaces.ILogger" />
        </member>
        <member name="F:Collections.API.Infrastructure.Logger.log">
            <summary>
            Log 4 Net instance.
            </summary>
        </member>
        <member name="M:Collections.API.Infrastructure.Logger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Infrastructure.Logger"/> class.
            </summary>
        </member>
        <member name="M:Collections.API.Infrastructure.Logger.#ctor(log4net.ILog)">
            <summary>
             Initializes a new instance of the <see cref="T:Collections.API.Infrastructure.Logger"/> class. Excepting a log 4 net instance.
            </summary>
            <param name="log">Log4Net Instance.</param>
        </member>
        <member name="P:Collections.API.Infrastructure.Logger.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Collections.API.Infrastructure.Logger.Repository">
            <summary>
            Gets the repository.
            </summary>
        </member>
        <member name="M:Collections.API.Infrastructure.Logger.IsEnabled(Collections.API.Enumerations.LogLevel)">
            <summary>
            Check if the level is enabled.
            </summary>
            <param name="level">The log level to check.</param>
            <returns>True or false.</returns>
        </member>
        <member name="M:Collections.API.Infrastructure.Logger.Log(Collections.API.Enumerations.LogLevel,System.Exception,System.String)">
            <summary>
            Log message at specified log level.
            </summary>
            <param name="level">The log level.</param>
            <param name="exception">The exception that was thrown to log.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.Logger.Log(Collections.API.Enumerations.LogLevel,System.Exception)">
            <summary>
            Log message at specified log level.
            </summary>
            <param name="level">The log level.</param>
            <param name="exception">The exception that was thrown to log.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.Logger.Log(Collections.API.Enumerations.LogLevel,System.Exception,System.String,System.Object[])">
            <summary>
            Log formatted message at specified log level .
            </summary>
            <param name="level">The log level.</param>
            <param name="exception">The exception that was thrown to log.</param>
            <param name="format">The composite format message to log.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.Logger.Log(Collections.API.Enumerations.LogLevel,System.String)">
            <summary>
            Log message at specified log level.
            </summary>
            <param name="level">The log level.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Collections.API.Infrastructure.Logger.Log(Collections.API.Enumerations.LogLevel,System.String,System.Object[])">
            <summary>
            Log formatted message at specified log level. 
            </summary>
            <param name="level">The log level.</param>
            <param name="format">The composite format message to log.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="T:Collections.API.Infrastructure.AutoMapConfig">
            <summary>
            The Auto mapper profile config
            </summary>
        </member>
        <member name="M:Collections.API.Infrastructure.AutoMapConfig.Configure">
            <summary>
            Configures this instance.
            </summary>
        </member>
        <member name="T:Collections.API.Mapper.Interfaces.IMapper">
            <summary>
            Interface for mapper.
            </summary>
        </member>
        <member name="M:Collections.API.Mapper.Interfaces.IMapper.Map``1(System.Object)">
            <summary>
            Maps object to that of type T.
            </summary>
            <typeparam name="T"> Type that is being mapped to.</typeparam>
            <param name="mapFrom">The map from.</param>
            <returns>Instance of T.</returns>
        </member>
        <member name="T:Collections.API.Mapper.Mapper">
            <summary>
            Maps object using AutoMapper.
            </summary>
        </member>
        <member name="M:Collections.API.Mapper.Mapper.Map``1(System.Object)">
            <summary>
            Maps object to that of type T.
            </summary>
            <typeparam name="T">Type that is being mapped to.</typeparam>
            <param name="mapFrom">The map from.</param>
            <returns>
            Instance of T.
            </returns>
        </member>
        <member name="T:Collections.API.Mapper.Profiles.AlbumsProfile">
            <summary>
            Class for album AutoMapper config profiles
            </summary>
            <seealso cref="T:AutoMapper.Profile" />
        </member>
        <member name="M:Collections.API.Mapper.Profiles.AlbumsProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Mapper.Profiles.AlbumsProfile"/> class.
            </summary>
        </member>
        <member name="T:Collections.API.Mapper.Profiles.BooksProfile">
            <summary>
            Class for book AutoMapper config profiles
            </summary>
            <seealso cref="T:AutoMapper.Profile" />
        </member>
        <member name="M:Collections.API.Mapper.Profiles.BooksProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Mapper.Profiles.BooksProfile"/> class.
            </summary>
        </member>
        <member name="T:Collections.API.Mapper.Profiles.MoviesProfile">
            <summary>
            Class for movie AutoMapper config profiles
            </summary>
            <seealso cref="T:AutoMapper.Profile" />
        </member>
        <member name="M:Collections.API.Mapper.Profiles.MoviesProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Mapper.Profiles.MoviesProfile"/> class.
            </summary>
        </member>
        <member name="T:Collections.API.Mapper.Profiles.VideoGamesProfile">
            <summary>
            Class for video game AutoMapper config profiles
            </summary>
            <seealso cref="T:AutoMapper.Profile" />
        </member>
        <member name="M:Collections.API.Mapper.Profiles.VideoGamesProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Mapper.Profiles.VideoGamesProfile"/> class.
            </summary>
        </member>
        <member name="T:Collections.API.Models.AlbumModel">
            <summary>
            Model for Album data
            </summary>
            <seealso cref="T:Collections.API.Models.Interfaces.IAlbumModel" />
        </member>
        <member name="P:Collections.API.Models.AlbumModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.Models.AlbumModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.AlbumModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.AlbumModel.AlbumArtist">
            <summary>
            Gets or sets the album artist.
            </summary>
        </member>
        <member name="P:Collections.API.Models.AlbumModel.Genres">
            <summary>
            Gets or sets the genres.
            </summary>
        </member>
        <member name="P:Collections.API.Models.AlbumModel.Producers">
            <summary>
            Gets or sets the producers.
            </summary>
        </member>
        <member name="P:Collections.API.Models.AlbumModel.FeaturedArtists">
            <summary>
            Gets or sets the featured artists.
            </summary>
        </member>
        <member name="P:Collections.API.Models.AlbumModel.Tracks">
            <summary>
            Gets or sets the tracks.
            </summary>
        </member>
        <member name="P:Collections.API.Models.AlbumModel.Discs">
            <summary>
            Gets or sets the discs.
            </summary>
        </member>
        <member name="P:Collections.API.Models.AlbumModel.Formats">
            <summary>
            Gets or sets the formats.
            </summary>
        </member>
        <member name="P:Collections.API.Models.AlbumModel.ReleasedDate">
            <summary>
            Gets or sets the released date.
            </summary>
        </member>
        <member name="P:Collections.API.Models.AlbumModel.AlbumCoverUrl">
            <summary>
            Gets or sets the album cover URL.
            </summary>
        </member>
        <member name="P:Collections.API.Models.AlbumModel.Rating">
            <summary>
            Gets or sets the rating.
            </summary>
        </member>
        <member name="T:Collections.API.Models.BookModel">
            <summary>
            Model for book data
            </summary>
            <seealso cref="T:Collections.API.Models.Interfaces.IBookModel" />
        </member>
        <member name="P:Collections.API.Models.BookModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.Models.BookModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.BookModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.BookModel.Authors">
            <summary>
            Gets or sets the authors.
            </summary>
        </member>
        <member name="P:Collections.API.Models.BookModel.ISBN13">
            <summary>
            Gets or sets the ISBN13.
            </summary>
        </member>
        <member name="P:Collections.API.Models.BookModel.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:Collections.API.Models.BookModel.Genres">
            <summary>
            Gets or sets the genres.
            </summary>
        </member>
        <member name="P:Collections.API.Models.BookModel.Formats">
            <summary>
            Gets or sets the formats.
            </summary>
        </member>
        <member name="P:Collections.API.Models.BookModel.PublishedDate">
            <summary>
            Gets or sets the published date.
            </summary>
        </member>
        <member name="P:Collections.API.Models.BookModel.CoverUrl">
            <summary>
            Gets or sets the cover URL.
            </summary>
        </member>
        <member name="P:Collections.API.Models.BookModel.Series">
            <summary>
            Gets or sets the series.
            </summary>
        </member>
        <member name="P:Collections.API.Models.BookModel.SeriesNumber">
            <summary>
            Gets or sets the series number.
            </summary>
        </member>
        <member name="P:Collections.API.Models.BookModel.Read">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Collections.API.Models.BookModel"/> is read.
            </summary>
        </member>
        <member name="P:Collections.API.Models.BookModel.Rating">
            <summary>
            Gets or sets the rating.
            </summary>
        </member>
        <member name="T:Collections.API.Models.Interfaces.IAlbumModel">
            <summary>
            Interface for the Album model
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IAlbumModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IAlbumModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IAlbumModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IAlbumModel.AlbumArtist">
            <summary>
            Gets or sets the album artist.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IAlbumModel.Genres">
            <summary>
            Gets or sets the genres.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IAlbumModel.Producers">
            <summary>
            Gets or sets the producers.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IAlbumModel.FeaturedArtists">
            <summary>
            Gets or sets the featured artists.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IAlbumModel.Tracks">
            <summary>
            Gets or sets the tracks.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IAlbumModel.Discs">
            <summary>
            Gets or sets the discs.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IAlbumModel.Formats">
            <summary>
            Gets or sets the formats.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IAlbumModel.ReleasedDate">
            <summary>
            Gets or sets the released date.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IAlbumModel.AlbumCoverUrl">
            <summary>
            Gets or sets the album cover URL.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IAlbumModel.Rating">
            <summary>
            Gets or sets the rating.
            </summary>
        </member>
        <member name="T:Collections.API.Models.Interfaces.IBookModel">
            <summary>
            Interface for the book model
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IBookModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IBookModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IBookModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IBookModel.Authors">
            <summary>
            Gets or sets the authors.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IBookModel.ISBN13">
            <summary>
            Gets or sets the ISBN13.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IBookModel.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IBookModel.Genres">
            <summary>
            Gets or sets the genres.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IBookModel.Formats">
            <summary>
            Gets or sets the formats.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IBookModel.PublishedDate">
            <summary>
            Gets or sets the published date.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IBookModel.CoverUrl">
            <summary>
            Gets or sets the cover URL.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IBookModel.Series">
            <summary>
            Gets or sets the series.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IBookModel.SeriesNumber">
            <summary>
            Gets or sets the series number.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IBookModel.Read">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Collections.API.Models.BookModel"/> is read.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IBookModel.Rating">
            <summary>
            Gets or sets the rating.
            </summary>
        </member>
        <member name="T:Collections.API.Models.Interfaces.IMovieModel">
            <summary>
            Interface for the Movie Model
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Directors">
            <summary>
            Gets or sets the directors.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Cast">
            <summary>
            Gets or sets the cast.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Producers">
            <summary>
            Gets or sets the producers.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Writers">
            <summary>
            Gets or sets the writers.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Genres">
            <summary>
            Gets or sets the genres.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Formats">
            <summary>
            Gets or sets the formats.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.ReleaseDate">
            <summary>
            Gets or sets the release date.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.RunningTime">
            <summary>
            Gets or sets the running time.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Certification">
            <summary>
            Gets or sets the certification.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.PosterUrl">
            <summary>
            Gets or sets the poster URL.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Series">
            <summary>
            Gets or sets the series.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.SeriesNumber">
            <summary>
            Gets or sets the series number.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Watched">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Collections.API.Models.MovieModel"/> is watched.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IMovieModel.Rating">
            <summary>
            Gets or sets the rating.
            </summary>
        </member>
        <member name="T:Collections.API.Models.Interfaces.IVideoGameModel">
            <summary>
            Interface for the video game model
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IVideoGameModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IVideoGameModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IVideoGameModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IVideoGameModel.Developers">
            <summary>
            Gets or sets the developers.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IVideoGameModel.DevelopmentStudios">
            <summary>
            Gets or sets the development studios.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IVideoGameModel.Publishers">
            <summary>
            Gets or sets the publishers.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IVideoGameModel.Platforms">
            <summary>
            Gets or sets the platforms.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IVideoGameModel.Genres">
            <summary>
            Gets or sets the genres.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IVideoGameModel.ReleaseDate">
            <summary>
            Gets or sets the release date.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IVideoGameModel.BoxArtUrl">
            <summary>
            Gets or sets the box art URL.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IVideoGameModel.Series">
            <summary>
            Gets or sets the series.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IVideoGameModel.SeriesNumber">
            <summary>
            Gets or sets the series number.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IVideoGameModel.Finished">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Collections.API.Models.VideoGameModel"/> is finished.
            </summary>
        </member>
        <member name="P:Collections.API.Models.Interfaces.IVideoGameModel.Rating">
            <summary>
            Gets or sets the rating.
            </summary>
        </member>
        <member name="T:Collections.API.Models.MovieModel">
            <summary>
            Model for movie data
            </summary>
            <seealso cref="T:Collections.API.Models.Interfaces.IMovieModel" />
        </member>
        <member name="P:Collections.API.Models.MovieModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Directors">
            <summary>
            Gets or sets the directors.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Cast">
            <summary>
            Gets or sets the cast.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Producers">
            <summary>
            Gets or sets the producers.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Writers">
            <summary>
            Gets or sets the writers.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Genres">
            <summary>
            Gets or sets the genres.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Formats">
            <summary>
            Gets or sets the formats.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.ReleaseDate">
            <summary>
            Gets or sets the release date.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.RunningTime">
            <summary>
            Gets or sets the running time.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Certification">
            <summary>
            Gets or sets the certification.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.PosterUrl">
            <summary>
            Gets or sets the poster URL.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Series">
            <summary>
            Gets or sets the series.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.SeriesNumber">
            <summary>
            Gets or sets the series number.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Watched">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Collections.API.Models.MovieModel"/> is watched.
            </summary>
        </member>
        <member name="P:Collections.API.Models.MovieModel.Rating">
            <summary>
            Gets or sets the rating.
            </summary>
        </member>
        <member name="T:Collections.API.Models.VideoGameModel">
            <summary>
            Model for video game data from the collection
            </summary>
            <seealso cref="T:Collections.API.Models.Interfaces.IVideoGameModel" />
        </member>
        <member name="P:Collections.API.Models.VideoGameModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.Models.VideoGameModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.VideoGameModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.Models.VideoGameModel.Developers">
            <summary>
            Gets or sets the developers.
            </summary>
        </member>
        <member name="P:Collections.API.Models.VideoGameModel.DevelopmentStudios">
            <summary>
            Gets or sets the development studios.
            </summary>
        </member>
        <member name="P:Collections.API.Models.VideoGameModel.Publishers">
            <summary>
            Gets or sets the publishers.
            </summary>
        </member>
        <member name="P:Collections.API.Models.VideoGameModel.Platforms">
            <summary>
            Gets or sets the platforms.
            </summary>
        </member>
        <member name="P:Collections.API.Models.VideoGameModel.Genres">
            <summary>
            Gets or sets the genres.
            </summary>
        </member>
        <member name="P:Collections.API.Models.VideoGameModel.ReleaseDate">
            <summary>
            Gets or sets the release date.
            </summary>
        </member>
        <member name="P:Collections.API.Models.VideoGameModel.BoxArtUrl">
            <summary>
            Gets or sets the box art URL.
            </summary>
        </member>
        <member name="P:Collections.API.Models.VideoGameModel.Series">
            <summary>
            Gets or sets the series.
            </summary>
        </member>
        <member name="P:Collections.API.Models.VideoGameModel.SeriesNumber">
            <summary>
            Gets or sets the series number.
            </summary>
        </member>
        <member name="P:Collections.API.Models.VideoGameModel.Finished">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Collections.API.Models.VideoGameModel"/> is finished.
            </summary>
        </member>
        <member name="P:Collections.API.Models.VideoGameModel.Rating">
            <summary>
            Gets or sets the rating.
            </summary>
        </member>
        <member name="T:Collections.API.Repositories.Interfaces.IDataRepository">
            <summary>
            Interface for the movies repository
            </summary>
            <seealso cref="T:Collections.API.Repositories.Interfaces.IRepository" />
        </member>
        <member name="M:Collections.API.Repositories.Interfaces.IDataRepository.GetAsync``2">
            <summary>
            Gets the records asynchronously.
            </summary>
            <typeparam name="T">The collection type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <returns>All records of requested type</returns>
        </member>
        <member name="M:Collections.API.Repositories.Interfaces.IDataRepository.GetByIdAsync``1(System.String)">
            <summary>
            Gets the requested record asynchronously.
            </summary>
            <param name="id">The Id of the record to be retrieved</param>
            <typeparam name="T">The collection type</typeparam>
            <returns>Retrieved record by it's Id</returns>
        </member>
        <member name="M:Collections.API.Repositories.Interfaces.IDataRepository.PostMultipleAsync``2(System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Posts multiple records asynchronously
            </summary>
            <param name="model">The model to be posted</param>
            <typeparam name="T">The collection type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Repositories.Interfaces.IDataRepository.PatchAsync``2(System.String,``1)">
            <summary>
            Patches specified record asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
            <typeparam name="T">The collection type</typeparam>
            <typeparam name="O">The model tyoe</typeparam>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Repositories.Interfaces.IDataRepository.PutAsync``2(System.String,``1)">
            <summary>
            Puts specified record asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
            <typeparam name="T">The collection type</typeparam>
            <typeparam name="O">The model tyoe</typeparam>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Repositories.Interfaces.IDataRepository.DeleteMultipleAsync``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Deletes specified records asynchronously.
            </summary>
            <param name="ids">The identifiers.</param>
            <typeparam name="T">The collection type</typeparam>
            <returns>True if successful</returns>
        </member>
        <member name="T:Collections.API.Repositories.Interfaces.IRepository">
            <summary>
            Base repository
            </summary>
        </member>
        <member name="T:Collections.API.Repositories.DataRepository">
            <summary>
            Repository for data from Mongp DB
            </summary>
            <seealso cref="T:Collections.API.Repositories.Interfaces.IDataRepository" />
        </member>
        <member name="F:Collections.API.Repositories.DataRepository.dataCollection">
            <summary>
            The data collection
            </summary>
        </member>
        <member name="F:Collections.API.Repositories.DataRepository.configurationService">
            <summary>
            The configuration service
            </summary>
        </member>
        <member name="M:Collections.API.Repositories.DataRepository.#ctor(Collections.API.Services.Interfaces.IConfigurationService,Collections.API.Infrastructure.Interfaces.IDataCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Repositories.DataRepository"/> class.
            </summary>
            <param name="configurationService">The configuration service</param>
            <param name="dataCollection">The data collection</param>
        </member>
        <member name="M:Collections.API.Repositories.DataRepository.GetAsync``2">
            <summary>
            Gets the records asynchronously.
            </summary>
            <typeparam name="T">The collection type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <returns>All records of requested type</returns>
        </member>
        <member name="M:Collections.API.Repositories.DataRepository.GetByIdAsync``1(System.String)">
            <summary>
            Gets the requested record asynchronously.
            </summary>
            <param name="id">The Id of the record to be retrieved</param>
            <typeparam name="T">The collection type</typeparam>
            <returns>Retrieved record by it's Id</returns>
        </member>
        <member name="M:Collections.API.Repositories.DataRepository.PostMultipleAsync``2(System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Posts multiple records asynchronously
            </summary>
            <param name="model">The model to be posted</param>
            <typeparam name="T">The collection type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Repositories.DataRepository.PatchAsync``2(System.String,``1)">
            <summary>
            Patches specified record asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
            <typeparam name="T">The collection type</typeparam>
            <typeparam name="O">The model tyoe</typeparam>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Repositories.DataRepository.PutAsync``2(System.String,``1)">
            <summary>
            Puts specified record asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
            <typeparam name="T">The collection type</typeparam>
            <typeparam name="O">The model tyoe</typeparam>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Repositories.DataRepository.DeleteMultipleAsync``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Deletes specified records asynchronously.
            </summary>
            <param name="ids">The identifiers.</param>
            <typeparam name="T">The collection type</typeparam>
            <returns>True if successful</returns>
        </member>
        <member name="T:Collections.API.Services.ConfigurationService">
            <summary>
            Service for the retrieval of configuration for the app
            </summary>
            <seealso cref="T:Collections.API.Services.Interfaces.IConfigurationService" />
        </member>
        <member name="M:Collections.API.Services.ConfigurationService.GetAppSetting(System.String)">
            <summary>
            Gets the app setting after being passed a key.
            </summary>
            <param name="key">The key of the app setting that is being returned.</param>
            <returns>An app setting.</returns>
        </member>
        <member name="M:Collections.API.Services.ConfigurationService.GetConnectionString(System.String)">
            <summary>
            Gets the connection string.
            </summary>
            <param name="key">The key.</param>
            <returns>A connection string</returns>
        </member>
        <member name="T:Collections.API.Services.Interfaces.IConfigurationService">
            <summary>
            Interface for the configuration service
            </summary>
            <seealso cref="T:Collections.API.Services.Interfaces.IService" />
        </member>
        <member name="M:Collections.API.Services.Interfaces.IConfigurationService.GetAppSetting(System.String)">
            <summary>
            Gets the app setting after being passed a key.
            </summary>
            <param name="key">The key of the app setting that is being returned.</param>
            <returns>An app setting.</returns>
        </member>
        <member name="M:Collections.API.Services.Interfaces.IConfigurationService.GetConnectionString(System.String)">
            <summary>
            Gets the connection string.
            </summary>
            <param name="key">The key.</param>
            <returns>A connection string</returns>
        </member>
        <member name="T:Collections.API.Services.Interfaces.IDataService">
            <summary>
            Interface for the data service
            </summary>
            <seealso cref="T:Collections.API.Services.Interfaces.IService" />
        </member>
        <member name="M:Collections.API.Services.Interfaces.IDataService.GetAsync``2">
            <summary>
            Gets the records asynchronously.
            </summary>
            <typeparam name="T">The collection type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <returns><see cref="T:System.Collections.Generic.IEnumerable`1"/>collection of records</returns>
        </member>
        <member name="M:Collections.API.Services.Interfaces.IDataService.GetByIdAsync``1(System.String)">
            <summary>
            Gets the requested record asynchronously.
            </summary>
            <typeparam name="T">The collection type</typeparam>
            <returns>The requested record</returns>
        </member>
        <member name="M:Collections.API.Services.Interfaces.IDataService.PostAsync``2(System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Posts the record asynchronously
            </summary>
            <param name="model">The model to be posted</param>
            <typeparam name="T">The collection type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Services.Interfaces.IDataService.PatchAsync``2(System.String,``1)">
            <summary>
            Patches specified the record asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
            <typeparam name="T">The collection type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Services.Interfaces.IDataService.PutAsync``2(System.String,``1)">
            <summary>
            Puts specified the record asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
            <typeparam name="T">The collection type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Services.Interfaces.IDataService.DeleteAsync``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Deletes specified the records asynchronously.
            </summary>
            <param name="ids">The identifiers.</param>
            <typeparam name="T">The collection type</typeparam>
            <returns>True if successful</returns>
        </member>
        <member name="T:Collections.API.Services.Interfaces.IService">
            <summary>
            Base service interface
            </summary>
        </member>
        <member name="T:Collections.API.Services.DataService">
            <summary>
            The data service
            </summary>
            <seealso cref="T:Collections.API.Services.Interfaces.IDataService" />
        </member>
        <member name="F:Collections.API.Services.DataService.dataRepository">
            <summary>
            The data repository
            </summary>
        </member>
        <member name="M:Collections.API.Services.DataService.#ctor(Collections.API.Repositories.Interfaces.IDataRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Collections.API.Services.DataService"/> class.
            </summary>
            <param name="dataRepository">The data repository.</param>
        </member>
        <member name="M:Collections.API.Services.DataService.GetAsync``2">
            <summary>
            Gets the records asynchronously.
            </summary>
            <typeparam name="T">The collection type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <returns><see cref="T:System.Collections.Generic.IEnumerable`1"/>collection of records</returns>
        </member>
        <member name="M:Collections.API.Services.DataService.GetByIdAsync``1(System.String)">
            <summary>
            Gets the requested record asynchronously.
            </summary>
            <typeparam name="T">The collection type</typeparam>
            <returns>The requested record</returns>
        </member>
        <member name="M:Collections.API.Services.DataService.PostAsync``2(System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Posts the record asynchronously
            </summary>
            <param name="model">The model to be posted</param>
            <typeparam name="T">The collection type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Services.DataService.PatchAsync``2(System.String,``1)">
            <summary>
            Patches specified the record asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
            <typeparam name="T">The collection type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Services.DataService.PutAsync``2(System.String,``1)">
            <summary>
            Puts specified the record asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="model">The model.</param>
            <typeparam name="T">The collection type</typeparam>
            <typeparam name="O">The model type</typeparam>
            <returns>True if successful</returns>
        </member>
        <member name="M:Collections.API.Services.DataService.DeleteAsync``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Deletes specified the records asynchronously.
            </summary>
            <param name="ids">The identifiers.</param>
            <typeparam name="T">The collection type</typeparam>
            <returns>True if successful</returns>
        </member>
        <member name="T:Collections.API.Startup">
            <summary>
            Startup class
            </summary>
        </member>
        <member name="M:Collections.API.Startup.Configuration(Owin.IAppBuilder)">
            <summary>
            Configurations the specified application.
            </summary>
            <param name = "app">The application.</param>
        </member>
        <member name="T:Collections.API.ViewModels.AlbumDetailViewModel">
            <summary>
            Detailed view model for Album data
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumDetailViewModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumDetailViewModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumDetailViewModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumDetailViewModel.AlbumArtist">
            <summary>
            Gets or sets the album artist.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumDetailViewModel.Genres">
            <summary>
            Gets or sets the genres.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumDetailViewModel.Producers">
            <summary>
            Gets or sets the producers.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumDetailViewModel.FeaturedArtists">
            <summary>
            Gets or sets the featured artists.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumDetailViewModel.Tracks">
            <summary>
            Gets or sets the tracks.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumDetailViewModel.Discs">
            <summary>
            Gets or sets the discs.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumDetailViewModel.Formats">
            <summary>
            Gets or sets the formats.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumDetailViewModel.ReleasedDate">
            <summary>
            Gets or sets the released date.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumDetailViewModel.AlbumCoverUrl">
            <summary>
            Gets or sets the album cover URL.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumDetailViewModel.Rating">
            <summary>
            Gets or sets the rating.
            </summary>
        </member>
        <member name="T:Collections.API.ViewModels.AlbumViewModel">
            <summary>
            View model for Album data
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumViewModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumViewModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumViewModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumViewModel.AlbumArtist">
            <summary>
            Gets or sets the album artist.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.AlbumViewModel.AlbumCoverUrl">
            <summary>
            Gets or sets the album cover URL.
            </summary>
        </member>
        <member name="T:Collections.API.ViewModels.BookDetailViewModel">
            <summary>
            View model for detailed book data
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookDetailViewModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookDetailViewModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookDetailViewModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookDetailViewModel.Authors">
            <summary>
            Gets or sets the authors.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookDetailViewModel.ISBN13">
            <summary>
            Gets or sets the ISBN13.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookDetailViewModel.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookDetailViewModel.Genres">
            <summary>
            Gets or sets the genres.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookDetailViewModel.Formats">
            <summary>
            Gets or sets the formats.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookDetailViewModel.PublishedDate">
            <summary>
            Gets or sets the published date.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookDetailViewModel.CoverUrl">
            <summary>
            Gets or sets the cover URL.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookDetailViewModel.Series">
            <summary>
            Gets or sets the series.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookDetailViewModel.SeriesNumber">
            <summary>
            Gets or sets the series number.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookDetailViewModel.Read">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Collections.API.ViewModels.BookDetailViewModel"/> is read.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookDetailViewModel.Rating">
            <summary>
            Gets or sets the rating.
            </summary>
        </member>
        <member name="T:Collections.API.ViewModels.BookViewModel">
            <summary>
            View model for books data
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookViewModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookViewModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookViewModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookViewModel.Authors">
            <summary>
            Gets or sets the authors.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.BookViewModel.CoverUrl">
            <summary>
            Gets or sets the cover URL.
            </summary>
        </member>
        <member name="T:Collections.API.ViewModels.MovieDetailViewModel">
            <summary>
            View model for the movie data
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Directors">
            <summary>
            Gets or sets the directors.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Cast">
            <summary>
            Gets or sets the cast.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Producers">
            <summary>
            Gets or sets the producers.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Writers">
            <summary>
            Gets or sets the writers.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Genres">
            <summary>
            Gets or sets the genres.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Formats">
            <summary>
            Gets or sets the formats.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.ReleaseDate">
            <summary>
            Gets or sets the release date.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.RunningTime">
            <summary>
            Gets or sets the running time.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Certification">
            <summary>
            Gets or sets the certification.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.PosterUrl">
            <summary>
            Gets or sets the poster URL.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Series">
            <summary>
            Gets or sets the series.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.SeriesNumber">
            <summary>
            Gets or sets the series number.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Watched">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Collections.API.ViewModels.MovieViewModel"/> is watched.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieDetailViewModel.Rating">
            <summary>
            Gets or sets the rating.
            </summary>
        </member>
        <member name="T:Collections.API.ViewModels.MovieViewModel">
            <summary>
            View model for the movie data
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieViewModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieViewModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieViewModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieViewModel.Directors">
            <summary>
            Gets or sets the directors.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.MovieViewModel.PosterUrl">
            <summary>
            Gets or sets the poster URL.
            </summary>
        </member>
        <member name="T:Collections.API.ViewModels.VideoGameDetailViewModel">
            <summary>
            Detailed view model for data from the Video Games collection
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameDetailViewModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameDetailViewModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameDetailViewModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameDetailViewModel.Developers">
            <summary>
            Gets or sets the developers.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameDetailViewModel.DevelopmentStudios">
            <summary>
            Gets or sets the development studios.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameDetailViewModel.Publishers">
            <summary>
            Gets or sets the publishers.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameDetailViewModel.Platforms">
            <summary>
            Gets or sets the platforms.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameDetailViewModel.Genres">
            <summary>
            Gets or sets the genres.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameDetailViewModel.ReleaseDate">
            <summary>
            Gets or sets the release date.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameDetailViewModel.BoxArtUrl">
            <summary>
            Gets or sets the box art URL.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameDetailViewModel.Series">
            <summary>
            Gets or sets the series.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameDetailViewModel.SeriesNumber">
            <summary>
            Gets or sets the series number.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameDetailViewModel.Finished">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Collections.API.ViewModels.VideoGameDetailViewModel"/> is finished.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameDetailViewModel.Rating">
            <summary>
            Gets or sets the rating.
            </summary>
        </member>
        <member name="T:Collections.API.ViewModels.VideoGameViewModel">
            <summary>
            View model for data from the Video Games collection
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameViewModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameViewModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameViewModel.TranslatedTitle">
            <summary>
            Gets or sets the translated title.
            </summary>
        </member>
        <member name="P:Collections.API.ViewModels.VideoGameViewModel.BoxArtUrl">
            <summary>
            Gets or sets the box art URL.
            </summary>
        </member>
        <member name="T:Collection.SwaggerConfig">
            <summary>
            The swagger configuration
            </summary>
        </member>
        <member name="M:Collection.SwaggerConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Registers the specified configuration.
            </summary>
            <param name="config">The configuration.</param>
        </member>
        <member name="M:Collection.SwaggerConfig.GetXmlCommentsPath">
            <summary>
            Gets the XML comments path.
            </summary>
            <returns>Path to Xml document</returns>
        </member>
    </members>
</doc>
